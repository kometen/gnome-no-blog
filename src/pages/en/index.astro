---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<h1>ðŸ¦€ Hello, Rust-coder!</h1>
			<p>
				Welcome to my blog mostly about my endeavour into Rust-programming. I don't
				consider myself a very skillful programmer, need to look at examples before
				I can get going. So being able to tools like Claude, ChatGPT, Gemini is a big
				boost for my productivity.
			</p>
			<p>
			Using Claude I have written a DNS-load-balancer. If you once in a while need an internal DNS-server
			you usually add it to available servers in network-settings. But sometimes it does not answer,
		    or other servers are quicker to respond and you don't get the desired result.
			</p>
			<p>
		    So I wrote a DNS-load-balancer which queries all servers in parallel, and you either get a response with the
			the information you requested, or that none could find what you asked for. The source-code for dns-load-balancer
            is at <a href="https://github.com/kometen/dns-load-balancer">Github</a>.
            </p>
            <p>
            The DNS-servers are configured in the file `config.toml`. Edit this to suit your needs, configure your
			network-settings to use 127.0.0.1 (localhost) as DNS-server and you'll always get an answer eventhough one
            or more servers are not available.
			</p>
			<p>
				Have fun! If you get stuck, remember to ask tools like Claude, they are very helpful
				if you ask the questions the right kind of way.
			</p>
			<p>
				Website built with the Astro framework hosted on Cloudflare. Check out <a
				href="https://astro.build/">Astro</a> and Cloudflare's <a
			    href="https://developers.cloudflare.com/pages/framework-guides/deploy-an-astro-site/">guide</a>
				on how to deploy on their infrastructure.
			</p>
		</main>
		<Footer />
	</body>
</html>
